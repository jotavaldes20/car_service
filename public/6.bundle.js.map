{"version":3,"sources":["webpack://car-service/./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","webpack://car-service/./node_modules/@material-ui/core/esm/Dialog/Dialog.js","webpack://car-service/./src/components/Ticket/CerrarTicket.jsx","webpack://car-service/./src/components/Ticket/NewTicket.jsx"],"names":["DialogTitle","props","ref","children","classes","className","_props$disableTypogra","disableTypography","other","root","component","variant","margin","padding","flex","name","defaultTransitionDuration","enter","exit","Dialog","BackdropProps","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","open","_props$PaperComponent","PaperComponent","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","mouseDownTarget","BackdropComponent","closeAfterTransition","appear","in","timeout","role","container","concat","onMouseUp","event","target","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","theme","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","outline","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","useStyles","makeStyles","flexGrow","form","marginTop","spacing","submit","ColorButton","withStyles","color","backgroundColor","red","Button","CerrarTicket","useState","setOpen","dispatch","useDispatch","user","useSelector","state","authentication","datos_tickets","sacar_patente","empresa_id","username","emisor_dte","patente","useEffect","ticketActions","direction","justify","item","size","style","marginLeft","onClick","e","preventDefault","success","id","htmlFor","label","type","value","monto_pagar","inputProps","min","startAdornment","autoFocus","disabled","ticket_id","propTypes","PropTypes","palette","text","secondary","TextMaskCustom","inputRef","inputElement","mask","placeholderChar","guide","showMask","valueRef","useRef","ingreso","ingresar_patente","patenteSalida","setpatenteSalida","IngresarPatente","loading","Fragment","inputComponent","labelWidth","onKeyDown","key","onChange"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; //para documentar Componente CerrarTicket\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { ticketActions } from \"../../actions\";\r\nimport { FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#fffff\",\r\n        backgroundColor: red[700],\r\n        '&:hover': {\r\n            backgroundColor: red[900],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst CerrarTicket = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.authentication.user);\r\n    const datos_tickets = useSelector(state => state.sacar_patente);\r\n    const { empresa_id,username,emisor_dte } = user;\r\n    const { patente } = props\r\n    useEffect(() => {\r\n        dispatch(ticketActions.fetchStateCerrarTicket())\r\n    }, []);\r\n\r\n    const handleOpen = (e) => {\r\n        e.preventDefault();\r\n        if (!patente == \"\") {\r\n            dispatch(ticketActions.sacar_patente(empresa_id, patente))\r\n            setOpen(!open);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(!open);\r\n        //localStorage.removeItem(\"sacar_patente\");\r\n    };\r\n\r\n    const pagar=(ticket_id)=>{\r\n        dispatch(ticketActions.pagar(empresa_id, ticket_id,username,emisor_dte))\r\n        setOpen(!open);\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n\r\n                <Grid item xs={12}>\r\n\r\n                    <ColorButton variant=\"contained\" color=\"primary\" size=\"small\" fullWidth\r\n                        style={{ marginLeft: 2 }} onClick={handleOpen} >\r\n                        Cerrar Ticket\r\n                    </ColorButton>\r\n                    {datos_tickets.success &&\r\n                        <Paper className={classes.paper}>\r\n                            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n\r\n                                <DialogTitle id=\"simple-dialog-title\">Monto pagar patente {patente}</DialogTitle>\r\n                                <DialogContent >\r\n                                    <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                                        \r\n                                        <InputLabel htmlFor=\"nueva-patente\">Monto Pagar</InputLabel>\r\n                                        <OutlinedInput\r\n                                            id=\"patente\"\r\n                                            label=\"Nueva Patente\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"text\"\r\n                                            value={datos_tickets.item[0].monto_pagar}\r\n                                            inputProps={{ min: 0, style: { textAlign: 'center' } }}\r\n                                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                                            autoFocus\r\n                                            disabled\r\n                                            margin=\"dense\"\r\n                                        />\r\n\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.submit}\r\n                                            onClick={() => pagar(datos_tickets.item[0].ticket_id)}\r\n                                        >\r\n                                            Pagar\r\n                                </Button>\r\n                                    </FormControl>\r\n                                </DialogContent>\r\n\r\n                            </Dialog>\r\n                        </Paper>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n}\r\n//Indica que debe recibir una variable de tipo String llamada Patente y es requerida\r\nCerrarTicket.propTypes = {\r\n    patente: PropTypes.string.isRequired\r\n};\r\nexport default CerrarTicket;\r\n","import React, { Fragment,useRef,useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputMask from 'react-text-mask';\r\nimport { FormControl, InputLabel, OutlinedInput } from '@material-ui/core';\r\nimport Loader from '../Loader/Loader';\r\nimport { ticketActions } from \"../../actions\";\r\nimport CerrarTicket from \"./CerrarTicket\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n      },\r\n}));\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n    return (\r\n        <InputMask\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[/[a-z]/, /[a-z]/, /\\w/, /\\w/, /\\d/, /\\d/]}\r\n            placeholderChar='*'\r\n            guide={true}\r\n            showMask={false}\r\n        />\r\n    );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n}\r\nconst NewTicket = () => {\r\n    const classes = useStyles();\r\n    const valueRef = useRef(''); //crear una referencia para el componente TextField\r\n    const dispatch = useDispatch();\r\n    const ingreso = useSelector(state => state.ingresar_patente);\r\n    const {empresa_id,username}=useSelector(state => state.authentication.user);\r\n    const [patenteSalida,setpatenteSalida]=useState(\"\")\r\n    function IngresarPatente(e) {\r\n        e.preventDefault();\r\n        if(!valueRef.current.value==\"\"){\r\n            dispatch(ticketActions.ingresar_patente(empresa_id,valueRef.current.value,username));\r\n            if(ingreso.success){\r\n                //setear valor del input\r\n            }            \r\n        }\r\n    }\r\n    function key_enter_entrada(e){\r\n        if (e.key === 'Enter') {\r\n            IngresarPatente(e)\r\n          }\r\n    }\r\n    \r\n    const patenteSalidaChange=(event)=>{\r\n        setpatenteSalida(event.target.value)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(ticketActions.fetchState())\r\n      },[])\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <b><h3>Nuevo Ticket</h3></b>\r\n                    {ingreso.loading && <Loader /> }\r\n                </Grid>\r\n                {!ingreso.loading &&\r\n                <Fragment>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <h4>Ingresar Patente</h4>\r\n                        <br></br>\r\n                        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"nueva-patente\">Nueva Patente</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"patente_nueva\"\r\n                            label=\"Nueva Patente\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            inputRef={valueRef}\r\n                            inputComponent={TextMaskCustom}\r\n                            inputProps={{ min: 0, style: { textAlign: 'center' } }}\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            labelWidth={100}\r\n                            onKeyDown={key_enter_entrada}\r\n                        />\r\n                        <br/>\r\n                        <Button\r\n                            id=\"ingresar\"\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={IngresarPatente}\r\n                        >\r\n                            Ingresar\r\n                                </Button>\r\n                        </FormControl>\r\n                        \r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <h4>Salida</h4>\r\n                        <br/>\r\n                        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"salida-patente\">Salida Patente</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"patente_salida\"\r\n                            label=\"Salida Patente\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            inputRef={valueRef}\r\n                            inputComponent={TextMaskCustom}\r\n                            inputProps={{ min: 0, style: { textAlign: 'center' } }}\r\n                            fullWidth\r\n                            margin=\"dense\"\r\n                            labelWidth={100}\r\n                            onChange={patenteSalidaChange}\r\n                        />\r\n                        <br/>\r\n                        <CerrarTicket patente={patenteSalida}/>\r\n                        {/*<Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit}\r\n                            onClick={SacarPatente}\r\n                        >\r\n                            salida\r\n                                </Button>*/}\r\n                        </FormControl>\r\n                    </Paper>\r\n                </Grid>                \r\n                </Fragment>}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default NewTicket;\r\n"],"sourceRoot":""}