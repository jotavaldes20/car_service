{"version":3,"sources":["webpack://car-service/./src/components/Ticket/CerrarTicket.jsx","webpack://car-service/./src/components/Ticket/CambiarPatente.jsx","webpack://car-service/./src/components/Ticket/TicketsAbiertos.jsx","webpack://car-service/./src/components/Ticket/VerTicket.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","form","width","marginTop","spacing","submit","margin","ColorButton","withStyles","color","backgroundColor","red","Button","CerrarTicket","props","useState","open","setOpen","classes","dispatch","useDispatch","user","useSelector","state","authentication","datos_tickets","sacar_patente","empresa_id","username","emisor_dte","patente","useEffect","ticketActions","className","container","direction","alignItems","justify","item","xs","variant","size","fullWidth","style","marginLeft","onClick","e","preventDefault","success","paper","onClose","id","htmlFor","label","type","value","monto_pagar","inputProps","min","textAlign","startAdornment","position","autoFocus","disabled","ticket_id","propTypes","PropTypes","green","TextMaskCustom","inputRef","other","ref","inputElement","mask","placeholderChar","guide","showMask","CambiarPatente","valueRef","useRef","Grid","Paper","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","OutlinedInput","inputComponent","current","columns","field","headerName","hide","renderCell","params","ButtonGroup","VerTicket","key","row","padding","palette","text","secondary","tickets_abiertos","loading","Loader","items","display","height","rows","getRowId","pageSize","autoHeight","disableColumnMenu","components","Toolbar","GridToolbar","React","fecha_ingreso","num_ticket","monto_cobrado"],"mappings":"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","file":"764.bundle.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from 'prop-types'; //para documentar Componente CerrarTicket\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { ticketActions } from \"../../actions\";\r\nimport { FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#fffff\",\r\n        backgroundColor: red[700],\r\n        '&:hover': {\r\n            backgroundColor: red[900],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst CerrarTicket = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.authentication.user);\r\n    const datos_tickets = useSelector(state => state.sacar_patente);\r\n    const { empresa_id,username,emisor_dte } = user;\r\n    const { patente } = props\r\n    useEffect(() => {\r\n        dispatch(ticketActions.fetchStateCerrarTicket())\r\n    }, []);\r\n\r\n    const handleOpen = (e) => {\r\n        e.preventDefault();\r\n        if (!patente == \"\") {\r\n            dispatch(ticketActions.sacar_patente(empresa_id, patente))\r\n            setOpen(!open);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(!open);\r\n        //localStorage.removeItem(\"sacar_patente\");\r\n    };\r\n\r\n    const pagar=(ticket_id)=>{\r\n        dispatch(ticketActions.pagar(empresa_id, ticket_id,username,emisor_dte))\r\n        setOpen(!open);\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n\r\n                <Grid item xs={12}>\r\n\r\n                    <ColorButton variant=\"contained\" color=\"primary\" size=\"small\" fullWidth\r\n                        style={{ marginLeft: 2 }} onClick={handleOpen} >\r\n                        Cerrar Ticket\r\n                    </ColorButton>\r\n                    {datos_tickets.success &&\r\n                        <Paper className={classes.paper}>\r\n                            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n\r\n                                <DialogTitle id=\"simple-dialog-title\">Monto pagar patente {patente}</DialogTitle>\r\n                                <DialogContent >\r\n                                    <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                                        \r\n                                        <InputLabel htmlFor=\"nueva-patente\">Monto Pagar</InputLabel>\r\n                                        <OutlinedInput\r\n                                            id=\"patente\"\r\n                                            label=\"Nueva Patente\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"text\"\r\n                                            value={datos_tickets.item[0].monto_pagar}\r\n                                            inputProps={{ min: 0, style: { textAlign: 'center' } }}\r\n                                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                                            autoFocus\r\n                                            disabled\r\n                                            margin=\"dense\"\r\n                                        />\r\n\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.submit}\r\n                                            onClick={() => pagar(datos_tickets.item[0].ticket_id)}\r\n                                        >\r\n                                            Pagar\r\n                                </Button>\r\n                                    </FormControl>\r\n                                </DialogContent>\r\n\r\n                            </Dialog>\r\n                        </Paper>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n}\r\n//Indica que debe recibir una variable de tipo String llamada Patente y es requerida\r\nCerrarTicket.propTypes = {\r\n    patente: PropTypes.string.isRequired\r\n};\r\nexport default CerrarTicket;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { green } from '@material-ui/core/colors';\r\nimport InputMask from 'react-text-mask';\r\nimport { ticketActions } from \"../../actions\";\r\nimport { FormControl, InputLabel, OutlinedInput } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#fffff\",\r\n        backgroundColor: green[700],\r\n        '&:hover': {\r\n            backgroundColor: green[900],\r\n        },\r\n    },\r\n}))(Button);\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <InputMask\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[/[a-z]/, /[a-z]/, /\\w/,/\\w/, /\\d/, /\\d/]}\r\n            placeholderChar='*'\r\n            guide={true}\r\n            showMask={false}\r\n        />\r\n    );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n}\r\nconst CambiarPatente = ({ id, ...props }) => {\r\n    const classes = useStyles();\r\n    const valueRef = useRef('') //crear una referencia para el componente TextField\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.authentication.user);\r\n    const {empresa_id}=user;\r\n    const {patente, ticket_id}=props\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    function CambiarPatente(e) {\r\n        e.preventDefault();\r\n        if(!valueRef.current.value==\"\"){\r\n            dispatch(ticketActions.cambiar_patente(empresa_id,valueRef.current.value,id));\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item xs={12}>\r\n\r\n                    <ColorButton variant=\"contained\" color=\"primary\" size=\"small\"\r\n                        style={{ marginLeft: 2 }} onClick={handleOpen} >\r\n                        Cambiar Patente\r\n                         </ColorButton>\r\n                    <Paper className={classes.paper}>\r\n                        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n\r\n                            <DialogTitle id=\"simple-dialog-title\">Cambiar Patente {patente}</DialogTitle>    \r\n                            <DialogContent >\r\n                            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"nueva-patente\">Nueva Patente</InputLabel>\r\n                            <OutlinedInput\r\n                                    id=\"patente\" \r\n                                    label=\"Nueva Patente\" \r\n                                    variant=\"outlined\" \r\n                                    type=\"text\" \r\n                                    inputRef={valueRef} \r\n                                    inputComponent={TextMaskCustom} \r\n                                    inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                                    fullWidth \r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                />\r\n\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.submit}\r\n                                        onClick={CambiarPatente}\r\n                                    >\r\n                                        Cambiar Patente\r\n                                </Button>\r\n                            </FormControl>\r\n                            </DialogContent>\r\n\r\n                        </Dialog>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n}\r\n//Indica que debe recibir una variable de tipo String llamada Patente y es requerida\r\nCambiarPatente.propTypes = {\r\n    patente: PropTypes.string.isRequired\r\n};\r\nexport default CambiarPatente\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport VerTicket from '../Ticket/VerTicket'\r\nimport CerrarTicket from '../Ticket/CerrarTicket'\r\nimport { ticketActions } from \"../../actions\";\r\nimport Loader from \"../Loader/Loader\"\r\nimport CambiarPatente from \"./CambiarPatente\";\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 100, hide: true },\r\n    { field: 'patente', headerName: 'Patente', width: 130 },\r\n    { field: 'fecha_ingreso', headerName: 'Fecha Ingreso', width: 300 },\r\n    { field: 'num_ticket', headerName: 'Num Ticket', width: 200 },\r\n    {\r\n        field: 'accion',\r\n        headerName: 'accion',\r\n        renderCell: (params) => (\r\n            <strong>\r\n                <ButtonGroup>\r\n\r\n                    <VerTicket key={params.row.id} {...params.row} />\r\n                    <CambiarPatente {...params.row} />\r\n                    <CerrarTicket  {...params.row} />\r\n                </ButtonGroup>\r\n            </strong>\r\n        ),\r\n        width: 600\r\n    },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst TicketsAbiertos = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const tickets_abiertos = useSelector(state => state.tickets_abiertos);\r\n    const user = useSelector(state => state.authentication.user);\r\n    useEffect(() => {\r\n        var empresa_id = user.empresa_id\r\n        dispatch(ticketActions.tickets_abiertos(empresa_id));\r\n    }, []);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <h3>Tickets Abiertos</h3>\r\n                    {tickets_abiertos.loading && <Loader />}\r\n                </Grid>\r\n                {tickets_abiertos.items &&\r\n                    <Grid item xs={12}>\r\n                        <div style={{ display: 'flex', height: \"100%\", width: '100%' }}>\r\n                            <div style={{ flexGrow: 1 }}>\r\n                                <DataGrid\r\n                                    rows={tickets_abiertos.items}\r\n                                    columns={columns}\r\n                                    getRowId={(row) => row.id}\r\n                                    pageSize={10}\r\n                                    autoHeight={true}\r\n                                    disableColumnMenu\r\n                                    components={{\r\n                                        Toolbar: GridToolbar,\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TicketsAbiertos;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst VerTicket =  ({ id, ...props  }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const {patente, fecha_ingreso, num_ticket,monto_cobrado}=props;\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                        style={{ marginLeft: 2 }} onClick={handleOpen} >\r\n                Ver\r\n            </Button>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Datos Ticket patente: {patente}</DialogTitle>\r\n            <List>\r\n                <ListItem >\r\n                    <p>Patente: {patente}</p>\r\n                </ListItem>\r\n                <ListItem >\r\n                    <p>Fecha de ingreso: {fecha_ingreso}</p>\r\n                </ListItem>\r\n                {num_ticket&&\r\n                <ListItem >\r\n                    <p>Num Ticket: {num_ticket}</p>                \r\n                </ListItem>\r\n                }\r\n                {monto_cobrado&&\r\n                    <ListItem >\r\n                    <p>cobro: $ {monto_cobrado}</p>\r\n                    </ListItem>\r\n                }\r\n            </List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n// prototype: components documentation\r\nVerTicket.propTypes = {\r\n    patente: PropTypes.string.isRequired,\r\n    fecha_ingreso: PropTypes.string.isRequired,\r\n    num_ticket: PropTypes.number,\r\n\r\n};\r\nexport default VerTicket;\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}