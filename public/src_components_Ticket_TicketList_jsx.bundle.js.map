{"version":3,"sources":["webpack://car-service/./src/components/Ticket/TicketList.jsx","webpack://car-service/./src/components/Ticket/VerTicket.jsx"],"names":["currencyFormatter","Intl","NumberFormat","style","currency","CLP","type","width","valueFormatter","value","format","Number","cellClassName","columns","field","headerName","hide","renderCell","params","row","useStyles","makeStyles","theme","root","flexGrow","fontVariantNumeric","paper","padding","spacing","textAlign","color","palette","text","secondary","TicketList","classes","dispatch","useDispatch","tickets","useSelector","state","tickets_list","user","authentication","funcionError","function","useState","JSON","stringify","setText","useEffect","console","log","empresa_id","user_id","ticketActions","loading","items","display","height","ticket_id","Toolbar","GridToolbar","VerTicket","id","props","React","open","setOpen","handleOpen","handleClose","patente","fecha_ingreso","num_ticket","monto_cobrado","marginLeft","propTypes","PropTypes","number"],"mappings":"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","file":"src_components_Ticket_TicketList_jsx.bundle.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport VerTicket from '../Ticket/VerTicket'\r\nimport { ticketActions } from \"../../actions\";\r\nimport Loader from \"../Loader/Loader\"\r\n//import ErrorBoundary from \"../ErrorBoundary\";\r\nimport { Button } from \"@material-ui/core\";\r\nconst currencyFormatter = new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'CLP',\r\n});\r\n\r\nconst CLP = {\r\n    type: 'number',\r\n    width: 130,\r\n    valueFormatter: ({ value }) => currencyFormatter.format(Number(value)),\r\n    cellClassName: 'font-tabular-nums',\r\n};\r\nconst columns = [\r\n    { field: 'ticket_id', headerName: 'ID', width: 100, hide: true },\r\n    { field: 'patente', headerName: 'Patente', width: 130 },\r\n    { field: 'fecha_ingreso', headerName: 'Fecha Ingreso', width: 210 },\r\n    { field: 'fecha_retiro', headerName: 'Fecha Retiro', width: 210 },\r\n    { field: 'monto_cobro', headerName: 'Monto Cobrado', width: 200, ...CLP },\r\n    { field: 'tiempo_cobro', headerName: 'Tiempo (min)', width: 200 },\r\n    {\r\n        field: 'accion',\r\n        headerName: 'accion',\r\n        renderCell: (params) => (\r\n            <strong>\r\n                <ButtonGroup>\r\n                    <VerTicket {...params.row} />\r\n                </ButtonGroup>\r\n            </strong>\r\n        ),\r\n        width: 200\r\n    },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        '& .font-tabular-nums': {\r\n            fontVariantNumeric: 'tabular-nums',\r\n        }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\nconst TicketList = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const tickets = useSelector(state => state.tickets_list);\r\n    const user = useSelector(state => state.authentication.user);\r\n    const funcionError = { function: 'Error Provocado de manera manual' };\r\n    const [text, setText] = useState(JSON.stringify(funcionError));\r\n    useEffect(() => {\r\n        console.log(user.empresa_id)\r\n        var empresa_id = user.empresa_id\r\n        var user_id = user.user_id\r\n        dispatch(ticketActions.tickets_list(empresa_id, user_id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <ErrorBoundary>*/}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        setText(funcionError);\r\n                    }}\r\n                >\r\n                    Probar ErrorBoundary (reemplazar string por objeto)\r\n                </Button>\r\n\r\n                <p>\r\n                    Al hacer clic en este botón se reemplazará el <code>string</code> del objeto,{' '}\r\n                    <code>{text}</code>,con el objeto original. Esto Provocara un error de renderizado\r\n                </p>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={12} >\r\n                        <h3>Lista Tickets Cerrados</h3>\r\n                        {tickets.loading && <Loader />}\r\n                    </Grid>\r\n                    {tickets.items &&\r\n                        <Grid item xs={12}>\r\n                            <div style={{ display: 'flex', height: \"100%\", width: '100%' }}>\r\n                                <div style={{ flexGrow: 1 }}>\r\n                                    <DataGrid\r\n                                        rows={tickets.items}\r\n                                        columns={columns}\r\n                                        getRowId={(row) => row.ticket_id}\r\n                                        pageSize={10}\r\n                                        autoHeight={true}\r\n                                        disableColumnMenu\r\n                                        components={{\r\n                                            Toolbar: GridToolbar,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            {/*</ErrorBoundary> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TicketList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst VerTicket =  ({ id, ...props  }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const {patente, fecha_ingreso, num_ticket,monto_cobrado}=props;\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                        style={{ marginLeft: 2 }} onClick={handleOpen} >\r\n                Ver\r\n            </Button>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Datos Ticket patente: {patente}</DialogTitle>\r\n            <List>\r\n                <ListItem >\r\n                    <p>Patente: {patente}</p>\r\n                </ListItem>\r\n                <ListItem >\r\n                    <p>Fecha de ingreso: {fecha_ingreso}</p>\r\n                </ListItem>\r\n                {num_ticket&&\r\n                <ListItem >\r\n                    <p>Num Ticket: {num_ticket}</p>                \r\n                </ListItem>\r\n                }\r\n                {monto_cobrado&&\r\n                    <ListItem >\r\n                    <p>cobro: $ {monto_cobrado}</p>\r\n                    </ListItem>\r\n                }\r\n            </List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n// prototype: components documentation\r\nVerTicket.propTypes = {\r\n    patente: PropTypes.string.isRequired,\r\n    fecha_ingreso: PropTypes.string.isRequired,\r\n    num_ticket: PropTypes.number,\r\n\r\n};\r\nexport default VerTicket;\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}