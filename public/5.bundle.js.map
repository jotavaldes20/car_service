{"version":3,"sources":["webpack://car-service/./src/components/Ticket/TicketList.jsx","webpack://car-service/./src/components/Ticket/VerTicket.jsx"],"names":["currencyFormatter","Intl","NumberFormat","style","currency","columns","field","headerName","width","hide","type","valueFormatter","value","format","Number","cellClassName","renderCell","params","row","useStyles","makeStyles","theme","root","flexGrow","fontVariantNumeric","paper","padding","spacing","textAlign","color","palette","text","secondary","classes","dispatch","useDispatch","tickets","useSelector","state","tickets_list","user","authentication","funcionError","function","useState","JSON","stringify","setText","useEffect","empresa_id","user_id","ticketActions","className","variant","onClick","container","item","xs","loading","items","display","height","rows","getRowId","ticket_id","pageSize","autoHeight","disableColumnMenu","components","Toolbar","GridToolbar","VerTicket","id","props","React","open","setOpen","patente","fecha_ingreso","num_ticket","monto_cobrado","size","marginLeft","onClose","propTypes","PropTypes"],"mappings":"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","file":"5.bundle.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport VerTicket from '../Ticket/VerTicket'\r\nimport { ticketActions } from \"../../actions\";\r\nimport Loader from \"../Loader/Loader\"\r\n//import ErrorBoundary from \"../ErrorBoundary\";\r\nimport { Button } from \"@material-ui/core\";\r\nconst currencyFormatter = new Intl.NumberFormat('es-ES', {\r\n    style: 'currency',\r\n    currency: 'CLP',\r\n});\r\n\r\nconst CLP = {\r\n    type: 'number',\r\n    width: 130,\r\n    valueFormatter: ({ value }) => currencyFormatter.format(Number(value)),\r\n    cellClassName: 'font-tabular-nums',\r\n};\r\nconst columns = [\r\n    { field: 'ticket_id', headerName: 'ID', width: 100, hide: true },\r\n    { field: 'patente', headerName: 'Patente', width: 130 },\r\n    { field: 'fecha_ingreso', headerName: 'Fecha Ingreso', width: 210 },\r\n    { field: 'fecha_retiro', headerName: 'Fecha Retiro', width: 210 },\r\n    { field: 'monto_cobro', headerName: 'Monto Cobrado', width: 200, ...CLP },\r\n    { field: 'tiempo_cobro', headerName: 'Tiempo (min)', width: 200 },\r\n    {\r\n        field: 'accion',\r\n        headerName: 'accion',\r\n        renderCell: (params) => (\r\n            <strong>\r\n                <ButtonGroup>\r\n                    <VerTicket {...params.row} />\r\n                </ButtonGroup>\r\n            </strong>\r\n        ),\r\n        width: 200\r\n    },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        '& .font-tabular-nums': {\r\n            fontVariantNumeric: 'tabular-nums',\r\n        }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\nconst TicketList = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const tickets = useSelector(state => state.tickets_list);\r\n    const user = useSelector(state => state.authentication.user);\r\n    const funcionError = { function: 'Error Provocado de manera manual' };\r\n    const [text, setText] = useState(JSON.stringify(funcionError));\r\n    useEffect(() => {\r\n        //console.log(user.empresa_id)\r\n        var empresa_id = user.empresa_id\r\n        var user_id = user.user_id\r\n        dispatch(ticketActions.tickets_list(empresa_id, user_id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <ErrorBoundary>*/}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        setText(funcionError);\r\n                    }}\r\n                >\r\n                    Probar ErrorBoundary (reemplazar string por objeto)\r\n                </Button>\r\n\r\n                <p>\r\n                    Al hacer clic en este botón se reemplazará el <code>string</code> del objeto,{' '}\r\n                    <code>{text}</code>,con el objeto original. Esto Provocara un error de renderizado\r\n                </p>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={12} >\r\n                        <h3>Lista Tickets Cerrados</h3>\r\n                        {tickets.loading && <Loader />}\r\n                    </Grid>\r\n                    {tickets.items &&\r\n                        <Grid item xs={12}>\r\n                            <div style={{ display: 'flex', height: \"100%\", width: '100%' }}>\r\n                                <div style={{ flexGrow: 1 }}>\r\n                                    <DataGrid\r\n                                        rows={tickets.items}\r\n                                        columns={columns}\r\n                                        getRowId={(row) => row.ticket_id}\r\n                                        pageSize={10}\r\n                                        autoHeight={true}\r\n                                        disableColumnMenu\r\n                                        components={{\r\n                                            Toolbar: GridToolbar,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            {/*</ErrorBoundary> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TicketList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst VerTicket =  ({ id, ...props  }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const {patente, fecha_ingreso, num_ticket,monto_cobrado}=props;\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                        style={{ marginLeft: 2 }} onClick={handleOpen} >\r\n                Ver\r\n            </Button>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Datos Ticket patente: {patente}</DialogTitle>\r\n            <List>\r\n                <ListItem >\r\n                    <p>Patente: {patente}</p>\r\n                </ListItem>\r\n                <ListItem >\r\n                    <p>Fecha de ingreso: {fecha_ingreso}</p>\r\n                </ListItem>\r\n                {num_ticket&&\r\n                <ListItem >\r\n                    <p>Num Ticket: {num_ticket}</p>                \r\n                </ListItem>\r\n                }\r\n                {monto_cobrado&&\r\n                    <ListItem >\r\n                    <p>cobro: $ {monto_cobrado}</p>\r\n                    </ListItem>\r\n                }\r\n            </List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n// prototype: components documentation\r\nVerTicket.propTypes = {\r\n    patente: PropTypes.string.isRequired,\r\n    fecha_ingreso: PropTypes.string.isRequired,\r\n    num_ticket: PropTypes.number,\r\n\r\n};\r\nexport default VerTicket;\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}